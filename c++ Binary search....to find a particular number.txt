#include<iostream>
//#include<bits/stdc++.h>
using namespace std;

int Binary_search(int arr[],int l,int r,int x)
{

    while(l<=r)
   {
     int mid = l+(r-l)/2;

     if(x ==arr[mid])
     return mid;

     if(x<arr[mid])
     r = mid-1;

     else
     l = mid+1;


   }
    return -1;

}   

int main()
{
	int arr[] = { 2, 3, 4, 10, 40 };
	int x;
    cout<<"enter the element that u are searching "<<endl;
    cin>>x;
    
	int n = sizeof(arr) / sizeof(arr[0]);
	int result = Binary_search(arr, 0, n - 1, x);
    (result == -1)
		?cout << "Element is not present in array"
		:cout << "Element is present at index " << result;
	return 0;
}






///////////////////////////////////////////////////////////second way////////////////////////////////////////////////////


/*
#include<iostream>
#include <bits/stdc++.h>
#define MAX_SIZE 5
using namespace std;

// A iterative binary search function. It returns
// location of x in given array arr[l..r] if present,
// otherwise -1
int binarySearch(int arr[], int l, int r, int x)
{
	while (l <= r) {
		int m = l + (r - l) / 2;

		// Check if x is present at mid
		if (arr[m] == x)
			return m;

		// If x greater, ignore left half
		if (arr[m] < x)
			l = m + 1;

		// If x is smaller, ignore right half
		else
			r = m - 1;
	}

	// if we reach here, then element was
	// not present
	return -1;
}

int main()
{    
  int i;

  int arr[MAX_SIZE];
  

  cout<<"\nEnter "<<  MAX_SIZE  << "element in the aaray "<<endl;
  for(i=0;i<MAX_SIZE;i++)
  {
    cin>>arr[i];
  }

  cout<<"Elements in the aaray is:: "<<endl;
  for(i=0;i<MAX_SIZE;i++)
  {
    cout<<" "<<arr[i];
  }
   

	int x;
  cout<<"\n Enter the element that u are searching"<<endl;
  cin>>x;

	int n = sizeof(arr) / sizeof(arr[0]);
	int result = binarySearch(arr, 0, n - 1, x);
	(result == -1)
		? cout << "Element is not present in array"
		: cout << "Element is present at index " << result;
	return 0;
}*/














